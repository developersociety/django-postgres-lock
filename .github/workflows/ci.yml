name: CI
on: pull_request
jobs:
  matrix:
    name: Build test matrix
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Python pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-matrix-pip-${{ hashFiles('requirements/testing.txt') }}
      - name: Run tox
        id: matrix
        run: |
          pip install $(grep "^tox==" requirements/local.txt)
          echo "::set-output name=tox_matrix::$(tox -l | fgrep -v coverage | python .github/matrix.py)"
    outputs:
      tox_matrix: ${{ steps.matrix.outputs.tox_matrix }}

  test:
    name: Test -- ${{ matrix.tox_env }}
    runs-on: ubuntu-20.04
    needs: matrix
    strategy:
      matrix:
        include: ${{ fromJson(needs.matrix.outputs.tox_matrix) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
      - name: Python pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.tox_env }}-pip-${{ hashFiles('requirements/testing.txt') }}
      - name: Run tests
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: password
          TOX_TESTENV_PASSENV: "PG*"
          PYTHON_VERSION: ${{ matrix.python }}
        run: |
          pip install $(grep "^tox==" requirements/local.txt)
          tox -e ${{ matrix.tox_env }}
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
