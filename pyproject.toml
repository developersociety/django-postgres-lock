[project]
name = 'django-postgres-lock'
version = '0.1.1'
description = 'Django Postgres Lock'
readme = 'README.md'
maintainers = [{ name = 'The Developer Society', email = 'studio@dev.ngo' }]
requires-python = '>= 3.9'
dependencies = [
  'Django>=3.2',
]
license = 'BSD-3-Clause'
classifiers = [
  'Environment :: Web Environment',
  'Framework :: Django',
  'Framework :: Django :: 3.2',
  'Framework :: Django :: 4.2',
  'Framework :: Django :: 5.2',
  'Intended Audience :: Developers',
  'Operating System :: OS Independent',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
]

[project.urls]
Homepage = 'https://github.com/developersociety/django-postgres-lock'

[build-system]
requires = ['setuptools >= 77.0.3']
build-backend = 'setuptools.build_meta'

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ['postgres_lock*']

[tool.ruff]
line-length = 99
target-version = 'py39'

[tool.ruff.lint]
extend-select = [
  'ERA',   # eradicate
  'YTT',   # flake8-2020
  'ASYNC', # flake8-async
  'S',     # flake8-bandit
  'BLE',   # flake8-blind-except
  'B',     # flake8-bugbear
  'A',     # flake8-builtins
  'COM',   # flake8-commas
  'C4',    # flake8-comprehensions
  'DTZ',   # flake8-datetimez
  'T10',   # flake8-debugger
  'DJ',    # flake8-django
  'EM',    # flake8-errmsg
  'EXE',   # flake8-executable
  'FA',    # flake8-future-annotations
  'INT',   # flake8-gettext
  'ISC',   # flake8-implicit-str-concat
  'ICN',   # flake8-import-conventions
  'LOG',   # flake8-logging
  'G',     # flake8-logging-format
  'INP',   # flake8-no-pep420
  'PIE',   # flake8-pie
  'T20',   # flake8-print
  'PYI',   # flake8-pyi
  'Q',     # flake8-quotes
  'RSE',   # flake8-raise
  'RET',   # flake8-return
  'SLOT',  # flake8-slots
  'SIM',   # flake8-simplify
  'TID',   # flake8-tidy-imports
  'TD',    # flake8-todos
  'TCH',   # flake8-type-checking
  'PTH',   # flake8-use-pathlib
  'FLY',   # flynt
  'I',     # isort
  'NPY',   # numpy-specific rules
  'PD',    # pandas-vet
  'N',     # pep8-naming
  'PERF',  # perflint
  'E',     # pycodestyle
  'W',     # pycodestyle
  'F',     # pyflakes
  'PGH',   # pygrep-hooks
  'PLC',   # pylint
  'PLE',   # pylint
  'PLW',   # pylint
  'UP',    # pyupgrade
  'FURB',  # refurb
  'RUF',   # ruff-specific rules
  'TRY',   # tryceratops
]
ignore = [
  'COM812', # flake8-commas: missing-trailing-comma
  'EM101',  # flake8-errmsg: raw-string-in-exception
  'ISC001', # flake8-implicit-str-concat: single-line-implicit-string-concatenation
  'RUF012', # ruff-specific rules: mutable-class-default
  'SIM105', # flake8-simplify: suppressible-exception
  'SIM108', # flake8-simplify: if-else-block-instead-of-if-exp
  'TD002',  # flake8-todos: missing-todo-author
  'TRY003', # tryceratops: raise-vanilla-args
]

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = [
  'future',
  'standard-library',
  'django',
  'third-party',
  'first-party',
  'local-folder',
]

[tool.ruff.lint.isort.sections]
'django' = ['django']

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ['assert*']
